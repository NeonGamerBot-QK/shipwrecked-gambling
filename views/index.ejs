<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Shipwrecked Blackjack — Multiplayer</title>
    <meta name="theme-color" content="#0b6b3a" />
    <!-- <script src="/node_modules/socket.io/client-dist/socket.io.min.js"></script> -->
    <!-- Tailwind (CDN for hackathon simplicity) -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.socket.io/4.7.5/socket.io.min.js"></script>
    <!-- Custom app CSS -->
    <link rel="stylesheet" href="/css/app.css" />
</head>

<body class="min-h-screen bg-slate-900 text-slate-100">
    <!-- App Header -->
    <header
        class="sticky top-0 z-10 flex items-center justify-between gap-4 px-4 py-3 border-b border-white/10 bg-white/5 backdrop-blur">
        <h1 class="text-xl font-semibold">Shipwrecked Blackjack</h1>
        <div id="app-status" aria-live="polite" class="text-sm text-slate-400">Status: idle</div>
    </header>

    <main class="grid grid-cols-1 gap-4 p-4 items-start lg:grid-cols-[1fr_260px]">
        <!-- Lobby Section -->
        <section id="lobby" aria-label="Lobby" class="bg-white/5 border border-white/10 rounded-xl p-6">
            <h2 class="text-lg font-semibold mb-4">Join Game</h2>

            <div id="identity" class="mb-4">
                <label for="display-name" class="block text-slate-400 text-sm mb-2">Display Name</label>
                <input id="display-name" name="displayName" type="text" placeholder="Your name" autocomplete="off"
                    class="w-full rounded-md border border-white/20 bg-white/10 px-3 py-2" />
            </div>

            <div id="lobby-controls" class="grid gap-3">
                <button id="join-game"
                    class="w-full rounded-md border border-white/20 bg-white/10 px-4 py-3 hover:bg-white/15 font-medium">Join Central Table</button>
            </div>
        </section>

        <!-- Table Section: dealer, virtual surface, players, actions -->
        <section id="table" aria-label="Table" hidden class="bg-white/5 border border-white/10 rounded-xl p-6">
            <h2 class="text-lg font-semibold mb-4">Central Table</h2>

            <div class="table-stage">
                <div id="table-viewport" aria-label="Virtual table">
                    <div id="table-surface" role="img" aria-label="Blackjack table surface">
                        <div id="table-markings" aria-hidden="true">
                            <div class="arc"></div>
                            <div class="payout">SHIPWRECKED BLACKJACK — BLACKJACK PAYS 3 TO 2</div>
                        </div>

                        <div id="dealer">
                            <h3 class="font-medium">Dealer</h3>
                            <div id="dealer-hand" class="hand" aria-live="polite"></div>
                            <div id="dealer-total" aria-live="polite">Total: —</div>
                        </div>

                        <!-- Seat placeholders (for quick visual reference; actual players render dynamically) -->
                        <ul id="seats" aria-label="Seats">
                            <li class="seat" data-seat="1">
                                <div class="bet-spot" aria-hidden="true"></div>
                                <div class="meta">
                                    <span class="seat-name">Open Seat</span>
                                    <span class="seat-chips">—</span>
                                </div>
                            </li>
                            <li class="seat" data-seat="2">
                                <div class="bet-spot" aria-hidden="true"></div>
                                <div class="meta">
                                    <span class="seat-name">Open Seat</span>
                                    <span class="seat-chips">—</span>
                                </div>
                            </li>
                            <li class="seat" data-seat="3">
                                <div class="bet-spot" aria-hidden="true"></div>
                                <div class="meta">
                                    <span class="seat-name">Open Seat</span>
                                    <span class="seat-chips">—</span>
                                </div>
                            </li>
                            <li class="seat" data-seat="4">
                                <div class="bet-spot" aria-hidden="true"></div>
                                <div class="meta">
                                    <span class="seat-name">Open Seat</span>
                                    <span class="seat-chips">—</span>
                                </div>
                            </li>
                            <li class="seat" data-seat="5">
                                <div class="bet-spot" aria-hidden="true"></div>
                                <div class="meta">
                                    <span class="seat-name">Open Seat</span>
                                    <span class="seat-chips">—</span>
                                </div>
                            </li>
                            <li class="seat" data-seat="6">
                                <div class="bet-spot" aria-hidden="true"></div>
                                <div class="meta">
                                    <span class="seat-name">Open Seat</span>
                                    <span class="seat-chips">—</span>
                                </div>
                            </li>
                        </ul>

                        <!-- Players container (dynamic) -->
                        <div id="players" aria-label="Players"></div>
                    </div>
                </div>
            </div>

            <div id="betting" class="mb-4 flex flex-wrap items-center gap-3 bg-white/5 rounded-lg p-4">
                <h3 class="font-medium">Betting</h3>
                <label for="bet-amount" class="text-slate-400 text-sm">Bet Amount</label>
                <input id="bet-amount" name="betAmount" type="number" min="1" step="1" placeholder="10"
                    class="rounded-md border border-white/20 bg-white/10 px-3 py-2 w-24" />
                <button id="place-bet" disabled
                    class="rounded-md border border-white/20 bg-white/10 px-3 py-2 opacity-50 cursor-not-allowed">Place
                    Bet</button>
            </div>

            <div id="actions" aria-label="Player Actions" class="flex flex-wrap items-center gap-3 bg-white/5 rounded-lg p-4">
                <button id="btn-hit" disabled
                    class="rounded-md border border-white/20 bg-white/10 px-4 py-2 opacity-50 cursor-not-allowed">Hit</button>
                <button id="btn-stand" disabled
                    class="rounded-md border border-white/20 bg-white/10 px-4 py-2 opacity-50 cursor-not-allowed">Stand</button>
                <button id="btn-double" disabled
                    class="rounded-md border border-white/20 bg-white/10 px-4 py-2 opacity-50 cursor-not-allowed">Double</button>
                <button id="btn-split" disabled
                    class="rounded-md border border-white/20 bg-white/10 px-4 py-2 opacity-50 cursor-not-allowed">Split</button>
            </div>
        </section>

        <!-- Chat Section -->
        <section id="chat" aria-label="Chat" hidden class="bg-white/5 border border-white/10 rounded-xl p-3">
            <h2 class="text-base font-semibold mb-2">Chat</h2>
            <ul id="messages" aria-live="polite"
                class="list-none m-0 p-2 min-h-[100px] max-h-[200px] overflow-auto bg-black/20 border border-white/10 rounded-lg text-sm">
            </ul>
            <div id="chat-input" class="mt-2 flex flex-col gap-2">
                <input id="message-input" type="text" placeholder="Type message…" autocomplete="off"
                    class="w-full rounded-md border border-white/20 bg-white/10 px-2 py-1 text-sm" />
                <button id="send-message"
                    class="w-full rounded-md border border-white/20 bg-white/10 px-2 py-1 hover:bg-white/15 text-sm">Send</button>
            </div>
        </section>
    </main>

    <!-- Templates (for client-side rendering) -->
    <template id="tpl-player">
        <div class="player" data-player-id="">
            <div class="player-header">
                <span class="player-name"></span>
                <span class="player-chips"></span>
                <span class="player-bet"></span>
            </div>
            <div class="player-hands"></div>
            <div class="player-total"></div>
        </div>
    </template>

    <template id="tpl-card">
        <div class="card" data-rank="" data-suit="" aria-label="Card"></div>
    </template>

    <!-- Minimal bootstrap script (no networking yet) -->
    <script>
        const socket = io()

        // Listen for connection
        socket.on("connect", () => {
            console.log("Connected to server:", socket.id);
        });

        (function () {
            // Sections
            const lobbyEl = document.getElementById('lobby');
            const tableEl = document.getElementById('table');
            const chatEl = document.getElementById('chat');

            // Status
            const statusEl = document.getElementById('app-status');

            // Lobby controls
            const displayNameEl = document.getElementById('display-name');
            const joinGameEl = document.getElementById('join-game');

            // Table elements
            const dealerHandEl = document.getElementById('dealer-hand');
            const dealerTotalEl = document.getElementById('dealer-total');
            const playersEl = document.getElementById('players');

            // Betting/action controls
            const betAmountEl = document.getElementById('bet-amount');
            const placeBetEl = document.getElementById('place-bet');
            const btnHitEl = document.getElementById('btn-hit');
            const btnStandEl = document.getElementById('btn-stand');
            const btnDoubleEl = document.getElementById('btn-double');
            const btnSplitEl = document.getElementById('btn-split');

            // Chat
            const messagesEl = document.getElementById('messages');
            const messageInputEl = document.getElementById('message-input');
            const sendMessageEl = document.getElementById('send-message');

            // Templates
            const tplPlayer = document.getElementById('tpl-player');
            const tplCard = document.getElementById('tpl-card');

            // Small, multiplayer-friendly update scheduler to batch DOM writes
            let q = [];
            let raf = null;
            function schedule(fn) {
                q.push(fn);
                if (raf === null) {
                    raf = requestAnimationFrame(() => {
                        const tasks = q; q = []; raf = null;
                        for (let i = 0; i < tasks.length; i++) tasks[i]();
                    });
                }
            }

            function setStatus(text) {
                schedule(() => { statusEl.textContent = 'Status: ' + text; });
            }

            function showLobby() {
                schedule(() => {
                    lobbyEl.hidden = false;
                    tableEl.hidden = true;
                    chatEl.hidden = true;
                });
            }

            function showTable() {
                schedule(() => {
                    lobbyEl.hidden = true;
                    tableEl.hidden = false;
                    chatEl.hidden = false;
                });
            }

            // Placeholder navigation (to be replaced when server events are added)
            joinGameEl.addEventListener('click', function (e) {
                e.preventDefault();
                const displayName = displayNameEl.value.trim();
                if (!displayName) {
                    alert('Please enter a display name');
                    return;
                }
                setStatus('joining central table…');
                // TODO: Request server to join central room with display name
                showTable();
            });

            placeBetEl.addEventListener('click', function () {
                // TODO: Send betAmountEl.value to server
            });

            btnHitEl.addEventListener('click', function () {
                // TODO: Send "hit"
            });

            btnStandEl.addEventListener('click', function () {
                // TODO: Send "stand"
            });

            btnDoubleEl.addEventListener('click', function () {
                // TODO: Send "double"
            });

            btnSplitEl.addEventListener('click', function () {
                // TODO: Send "split"
            });

            sendMessageEl.addEventListener('click', function () {
                const msg = messageInputEl.value.trim();
                if (!msg) return;
                // TODO: Emit chat message to server
                const li = document.createElement('li');
                li.textContent = msg;
                messagesEl.appendChild(li);
                messageInputEl.value = '';
            });

            // TODO: Socket wiring (e.g., socket.io) will be added later
            // TODO: Rendering helpers and keyed diffing will be added later

            // Start at the lobby
            setStatus('idle');
            showLobby();
        })();
    </script>
</body>

</html>